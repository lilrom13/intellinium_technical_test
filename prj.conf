# Configuration
# Incresed stack due to settings API usage
CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE=2048
CONFIG_STDOUT_CONSOLE=y
CONFIG_PRINTK=y

CONFIG_GPIO=y

CONFIG_I2C=y

# This option enables Bluetooth support.
CONFIG_BT=y
# Normal printf-style to console
CONFIG_BT_DEBUG_LOG=y
# This option enables support for the Security Manager Protocol (SMP), making it possible to pair devices over LE.
CONFIG_BT_SMP=y
# This option enables data signing which is used for transferring authenticated data in an unencrypted connection.
CONFIG_BT_SIGNING=y
# Select this for LE Peripheral role support.
CONFIG_BT_PERIPHERAL=y
# Enable GATT Device Information service
CONFIG_BT_GATT_DIS=y
# Number of ATT prepare write buffers
CONFIG_BT_ATT_PREPARE_COUNT=2
# Enable local Privacy Feature support. This makes it possible to use Resolvable Private Addresses (RPAs).
CONFIG_BT_PRIVACY=y
# Bluetooth device name
CONFIG_BT_DEVICE_NAME="Intellimium Technical Test"
# Bluetooth device appearance. For the list of possible values please consult the following link: https://www.bluetooth.com/specifications/assigned-numbers
# CONFIG_BT_DEVICE_APPEARANCE=833
# Enabling this option allows for runtime configuration of Bluetooth device name.
CONFIG_BT_DEVICE_NAME_DYNAMIC=y
# Maximum size in bytes for device name
CONFIG_BT_DEVICE_NAME_MAX=65

# Enable support for the flash hardware.
CONFIG_FLASH=y
# Enables API for retrieving the layout of flash memory pages.
CONFIG_FLASH_PAGE_LAYOUT=y
# Enable support of flash map abstraction.
CONFIG_FLASH_MAP=y
# Enable support of Flash Circular Buffer.
CONFIG_FCB=y
# The settings subsystem allows its users to serialize and deserialize state in memory into and from
# non-volatile memory. It supports several back-ends to store and load serialized data from and it
# can do so atomically for all involved modules.
CONFIG_SETTINGS=y
# Use FCB as a settings storage back-end.
CONFIG_SETTINGS_FCB=y
